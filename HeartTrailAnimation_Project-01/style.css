body {
    height: 100vh;
    margin: 0;
    background-color: black;
    overflow: hidden;
}

span {
    height: 100px;
    width: 100px;
    background: url("https://cdn4.iconfinder.com/data/icons/general-office/91/General_Office_54-512.png");
    position: absolute;
    top: 50%;
    left: 50%;
    background-size: cover;
    transform: translate(-50%, -50%);
    /*  
    ðŸ‘†
    => This ensures that the element is centered both horizontally and vertically in its parent container.
    */
    pointer-events: none;
    /*  
    - It disables mouse interactions (clicks, hovers, etc.) on the element.
    - Useful when you want an element (like the heart in your animation) to appear on the screen but not interfere with user interactions on other elements below it.
    */
    animation: animateHeart 6s linear;
}

@keyframes animateHeart {
    0% {
        transform: translate(-50%, -50%);
        opacity: 1;
        filter: hue-rotate(0);
    }

    100% {
        transform: translate(-50%, -5000%);
        opacity: 0;
        filter: hue-rotate(720deg);
    }
}

/*  
ðŸ‘†
-> hue-rotate(0); means no change in hue, meaning the element retains its original colors.
-> If you change the value, like hue-rotate(720deg);, it shifts the colors around the spectrum.
*/